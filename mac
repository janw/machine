#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

basepath="$(dirname "$0")"

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

update_shell() {
  do_update() {
    local shell_path;
    shell_path="$(which zsh)"

    fancy_echo "Changing your shell to zsh ..."
    if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
      fancy_echo "Adding '$shell_path' to /etc/shells"
      sudo sh -c "echo $shell_path >> /etc/shells"
    fi
    sudo chsh -s "$shell_path" "$USER"
  }

  case "$SHELL" in
    */zsh)
      if [ "$(which zsh)" != '/usr/local/bin/zsh' ] ; then do_update; fi
      ;;
    *)
      do_update
      ;;
  esac
}

npm_install() {
  if ! command -v npm >/dev/null; then
    fancy_echo "Installing Node.js and NPM via Brew ..."
    brew install node
  fi
}

npm_update() {
  if npm list -g --depth=0 "$1" > /dev/null; then
    npm update -g "$@"
  else
    npm install -g "$@"
  fi
}

brew_install() {
  if ! command -v brew >/dev/null; then
    fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    export PATH="/usr/local/bin:$PATH"
  fi

  if brew list | grep -Fq brew-cask; then
    fancy_echo "Uninstalling old Homebrew-Cask ..."
    brew uninstall --force brew-cask
  fi
}

brew_update() {
  fancy_echo "Updating Homebrew formulae ..."
  brew update --force
  brew bundle --file="${basepath}/Brewfile"
}

mas_install() {
  if ! command -v mas >/dev/null; then
    brew install mas
  fi
}

mas_update() {
  mas account > /dev/null || (
    fancy_echo "Please log in to the Mac App Store, and press Enter to continue."
    return
  )

  fancy_echo "Installing apps from MAS..."
  brew update --force
  brew bundle --file="${basepath}/Brewfile.mas"
}

fancy_echo "Installing system-wide node packages..."
npm_install_or_update "gtop"


defaults_write() {
  bash "${basepath}/defaults.write.sh"
}
