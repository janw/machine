#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SHELL_DU_JOUR=fish

HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
NO_CONFIRM=${MACHINE_NO_CONFIRM:-}

fg_red="$(tput setaf 1)"
fg_green="$(tput setaf 2)"
bold="$(tput bold)"
reset="$(tput me)"
retval=0

# shellcheck disable=SC2031
export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "${fg_red}failed${reset}\n\n" >&2; exit $ret' EXIT

fancy_echo() {
  local fmt="$1"
  shift

  # shellcheck disable=SC2059
  printf "\n${fg_green}$fmt${reset}\n" "$@"
}

enter_cont() {
  if [ -n "$NO_CONFIRM" ]; then
    return 0
  fi

  read -r -p "${bold}Continue? [Y/n/q] ${reset}" input

  case $input in
  [nN][oO] | [nN])
    return 1
    ;;
  [qQ][uU][iI][tT] | [qQ])
    fancy_echo "Bailing early."
    exit 0
    ;;
  *)
    return 0
    ;;
  esac
}

xcode_bootstrap() {
  xcode-select --install 2>/dev/null || return
}

brew_bootstrap() {
  if command -v brew >/dev/null; then
    fancy_echo "Found Homebrew"
    return
  fi

  fancy_echo "Installing Homebrew ..."
  enter_cont && (
    /bin/bash -c "$(curl -fsSL \
      https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  )
}

shell_bootstrap() {
  local shell_path
  local brew_prefix
  shell_path="$(command -v $SHELL_DU_JOUR)"
  brew_prefix="$(brew --prefix)"

  if [[ "$shell_path" = "$brew_prefix"* ]]; then
    fancy_echo "Found $SHELL_DU_JOUR shell"
    return
  fi

  fancy_echo "Installing $SHELL_DU_JOUR shell ..."
  enter_cont && brew install "$SHELL_DU_JOUR"
}

shell_update() {
  local shell_path
  shell_path="$(command -v $SHELL_DU_JOUR)"

  if [ "$SHELL" = "$shell_path" ]; then
    fancy_echo "You're set up to use $SHELL_DU_JOUR shell"
    return
  fi

  fancy_echo "Changing your shell to $SHELL_DU_JOUR ..."
  if ! grep "$shell_path" /etc/shells >/dev/null 2>&1; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

install_formulae() {
  fancy_echo "Installing formulae..."
  enter_cont || return

  brew bundle --file="${HERE}/Brewfile"

  if [ -f "${HERE}/Brewfile.local" ]; then
    fancy_echo "Installing additional formulae from .local"
    brew bundle --file="${HERE}/Brewfile.local"
  fi
  if [ -f "${HOME}/.Brewfile.local" ]; then
    fancy_echo "Installing additional formulae from .local in home directory"
    brew bundle --file="${HOME}/.Brewfile.local"
  fi
}

install_personal() {
  fancy_echo "Installing personal formulae [not for work] ..."
  enter_cont || return

  brew bundle --file="${HERE}/Brewfile.personal"
}

install_mas() {
  fancy_echo "Installing apps from MAS..."
  enter_cont || return 0

  if ! command -v mas >/dev/null; then
    fancy_echo "Installing MAS CLI client"
    brew install mas
  fi
  mas account >/dev/null || (
    read -r -p "Please log in to the Mac App Store, and press Enter to continue."
  )

  brew bundle --file="${HERE}/Brewfile.mas"
  if [ -f "${HERE}/Brewfile.mas.local" ]; then
    fancy_echo "Installing additional apps from .local"
    brew bundle --file="${HERE}/Brewfile.mas.local"
  fi
  if [ -f "${HOME}/.Brewfile.mas.local" ]; then
    fancy_echo "Installing additional apps from .local in home directory"
    brew bundle --file="${HOME}/.Brewfile.mas.local"
  fi
}

install_npm() {
  fancy_echo "Installing system-wide node packages..."
  enter_cont || return 0

  if ! command -v npm >/dev/null; then
    fancy_echo "Installing node"
    brew install node
  fi

  npm_install_or_update() {
    if npm list -g --depth=0 "$1" >/dev/null; then
      npm update -g "$@"
    else
      npm install -g "$@"
    fi
  }

  npm_install_or_update "gtop"
}

xcode_bootstrap || true

brew_bootstrap

shell_bootstrap

shell_update

install_formulae || retval=$((retval + 1))
install_personal || retval=$((retval + 1))
install_mas || retval=$((retval + 1))
install_npm || retval=$((retval + 1))

fancy_echo "Customizing macOS system settings..."
# shellcheck disable=SC2015
enter_cont && (
  sudo -v
  while true; do
    sudo -n true
    sleep 60
    kill -0 "$$" || exit
  done 2>/dev/null &

  # Disable the sound effects on boot
  sudo nvram SystemAudioVolume=" "
  defaults write .GlobalPreferences com.apple.sound.beep.sound /System/Library/Sounds/Tink.aiff
  defaults write .GlobalPreferences com.apple.sound.beep.volume -float 0.0
  defaults write .GlobalPreferences com.apple.sound.uiaudio.enabled -int 0
  defaults write .GlobalPreferences com.apple.sound.beep.feedback -int 0

  # Prevent Time Machine from prompting to use new hard drives as backup volume
  defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

  # Increase window resize speed for Cocoa applications
  defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

  # Disable window animations
  defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false
  defaults write -g QLPanelAnimationDuration -float 0
  defaults write com.apple.finder DisableAllAnimations -bool true
  defaults write com.apple.dock launchanim -bool false
  defaults write com.apple.dock expose-animation-duration -float 0.1
  sudo defaults write com.apple.universalaccess reduceMotion -bool true

  # Disable the crash reporter
  defaults write com.apple.CrashReporter DialogType -string "none"

  # Disable smart quotes/dashes as theyâ€™re annoying when typing code
  defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
  defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
  defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false

  # Enable full keyboard access for all UI controls
  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

  # Disable press-and-hold for keys in favor of key repeat
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

  # Disable auto-correct
  defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

  # Enable three-finger drag (now accessibility feature)
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool true
  defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
  sudo defaults write bluetoothaudiod "Enable AAC codec" -bool true
  sudo defaults write bluetoothaudiod "Enable AptX codec" -bool true

  fancy_echo "Customizing macOS screen capture settings..."
  mkdir -p "${HOME}/Pictures/Screenshots"
  defaults write com.apple.screencapture location -string "${HOME}/Pictures/Screenshots"
  defaults write com.apple.screencapture type -string "png"
  defaults write com.apple.screencapture disable-shadow -bool true

  # Enable HiDPI display modes (requires restart)
  sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

  fancy_echo "Customizing macOS finder settings..."
  defaults write com.apple.finder NewWindowTarget -string "PfDe"
  defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop"
  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
  defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  defaults write com.apple.finder ShowStatusBar -bool true
  defaults write com.apple.finder ShowPathbar -bool true
  defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
  defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  defaults write NSGlobalDomain com.apple.springing.enabled -bool true
  defaults write NSGlobalDomain com.apple.springing.delay -float 1.0
  defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
  defaults write com.apple.finder WarnOnEmptyTrash -bool false
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
  defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true
  defaults write com.apple.helpviewer DevMode -bool true

  # Avoid creating .DS_Store files on network or USB volumes
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

  # Keep folders on top when sorting by name
  defaults write com.apple.finder _FXSortFoldersFirst -bool true

  # Wrap finder settings separately as they tend to fail on newly setup Macs
  (
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
  ) || true

  chflags nohidden ~/Library
  sudo chflags nohidden /Volumes

  defaults write com.apple.finder FXInfoPanesExpanded -dict \
    General -bool true \
    OpenWith -bool true \
    Privileges -bool true

  fancy_echo "Customizing macOS dock settings..."
  defaults write com.apple.dock tilesize -int 36
  defaults write com.apple.dock show-process-indicators -bool true
  defaults write com.apple.dashboard mcx-disabled -bool true
  defaults write com.apple.dock dashboard-in-overlay -bool true

  defaults write com.apple.dock autohide-delay -float 0.0001
  defaults write com.apple.dock autohide-time-modifier -float 0.1
  defaults write com.apple.dock autohide -bool true

  defaults write com.apple.dock showLaunchpadGestureEnabled -int 0
  defaults write com.apple.dock showDesktopGestureEnable -int 0
  defaults write com.apple.dock showMissionControlGestureEnabled -int 0

  # Donâ€™t show recent applications in Dock
  defaults write com.apple.dock show-recents -bool false

  # Reset Launchpad
  find ~/Library/Application\ Support/Dock -name "*.db" -maxdepth 1 -delete

  fancy_echo "Customizing macOS various application settings..."
  defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
  defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

  defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

  defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true
  defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1
  defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1
  defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1
  defaults write com.apple.commerce AutoUpdate -bool true

  defaults write com.apple.TextEdit RichText -int 0
  defaults write com.apple.TextEdit PlainTextEncoding -int 4
  defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

  defaults write com.apple.ActivityMonitor SortColumn -string "CPUTime"
  defaults write com.apple.ActivityMonitor SortDirection -int 0
  defaults write com.apple.ActivityMonitor ShowCategory -int 0
  defaults write com.apple.ActivityMonitor IconType -int 5
  defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

  fancy_echo "Customizing Mail application settings..."
  defaults write com.apple.mail SpellCheckingBehavior -string "NoSpellCheckingEnabled"
  defaults write com.apple.mail SendFormat -string "Plain"
  defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false
  defaults write com.apple.mail DisableReplyAnimations -bool true
  defaults write com.apple.mail DisableSendAnimations -bool true
  defaults write com.apple.mail ConversationViewMarkAllAsRead -bool true
  defaults write com.apple.mail ConversationViewSortDescending -bool true
  defaults write com.apple.mail DisableInlineAttachmentViewing -bool true
  defaults write com.apple.mail NumberOfSnippetLines -int 1
  sudo defaults write com.apple.mail-shared DisableURLLoading -bool true
  sudo defaults write com.apple.mail-shared ExpandPrivateAliases -bool true

  defaults write com.apple.Safari AutoFillFromAddressBook -bool false
  defaults write com.apple.Safari AutoFillPasswords -bool false
  defaults write com.apple.Safari AutoFillCreditCardData -bool false
  defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false
  defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
  defaults write com.apple.Safari WebKitInitialTimedLayoutDelay 0.1
  defaults write com.apple.Safari WebKitResourceTimedLayoutDelay 0.1

  # Disable Preview's page scaling on printing
  defaults write com.apple.Preview PVImagePrintingScaleMode 0
  defaults write com.apple.Preview PVImagePrintingAutoRotate 0
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

  fancy_echo "Customizing Chrome application settings..."
  defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
  defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
  defaults write com.google.Chrome DisablePrintPreview -bool true
  defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true

  fancy_echo "Customizing Skitch application settings..."
  defaults write com.skitch.skitch HasAskedToKeepHelperRunningInBackground -bool true
  defaults write com.skitch.skitch StartHelperAtLogin -bool false
  defaults write com.skitch.skitch KeepHelperRunningInBackground -bool false

  fancy_echo "Customizing Spotify client application settings..."
  defaults write com.spotify.client run_mode -string "clean_quit"
  defaults write com.spotify.client AutoStartSettingIsHidden -bool false

) || true

fancy_echo "Done."
